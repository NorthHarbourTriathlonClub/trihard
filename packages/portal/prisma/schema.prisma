datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client"
}

model TrainingSession {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt           DateTime             @default(now())
  createdBy           String?
  updatedAt           DateTime             @updatedAt
  archived            Boolean              @default(false)
  archivedAt          DateTime?
  startTime           DateTime
  finishTime          DateTime?
  coachFullName       String
  type                String
  location            String
  trainingAttendences TrainingAttendence[]
}

model TrainingAttendence {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime         @default(now())
  createdBy          String?
  updatedAt          DateTime         @updatedAt
  archived           Boolean          @default(false)
  archivedAt         DateTime?
  trainingSessionId  String?          @db.ObjectId
  trainingSession    TrainingSession? @relation(fields: [trainingSessionId], references: [id])
  memberId           String           @db.ObjectId
  member             Member           @relation(fields: [memberId], references: [id])
  trainingsCompleted String[]
  paymentIds         String[]         @db.ObjectId
  payments           Payment[]        @relation(fields: [paymentIds], references: [id])
  comment            String?
}

model Member {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime             @default(now())
  createdBy          String?
  updatedAt          DateTime             @updatedAt
  archived           Boolean              @default(false)
  archivedAt         DateTime?
  firstName          String
  lastName           String
  preferredName      String?
  email              String
  mobile             String?
  payments           Payment[]
  traniningsAttended TrainingAttendence[]
}

model Payment {
  id                    String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt             DateTime             @default(now())
  createdBy             String?
  updatedAt             DateTime             @updatedAt
  archived              Boolean              @default(false)
  archivedAt            DateTime?
  memberId              String?              @db.ObjectId
  member                Member?              @relation(fields: [memberId], references: [id])
  trainingAttendenceIds String[]             @db.ObjectId
  trainingAttendences   TrainingAttendence[] @relation(fields: [trainingAttendenceIds], references: [id])
  amount                Float
  paymentMethod         String
}
